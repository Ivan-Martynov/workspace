#lang sicp

(define (product_rec term a next b)
  (if (> a b)
      1
      (* (term a) (product_rec term (next a) next b))))

(define (product_iter term a next b)
  (define (iter a result)
    (if (> a b)
        result
        (iter (next a) (* result (term a)))))
  (iter a 1))

(define (cont_frac_iter n d k)
  (define (iter i result)
    (if (= i 1)
        (/ (n i) (+ (d i) result))
        result
        (/ (n i) (+ (d i) result

(define (cont_frac n d k)
  (if (= k 1)
      (/ (n 1) (d 1))
      (+ (/ (n k) (d k))
  